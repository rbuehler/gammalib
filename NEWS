New Features and Important Changes in GammaLib 00-08-00

Author(s) : Juergen Knoedlseder

September, 7th, 2013


1. Introduction
---------------
This document briefly summarizes module by module the most important
changes made since the last release of GammaLib.


2. Public interface modifications
---------------------------------
This section summarizes all modifications of public class interfaces
that will lead to compatibility issues with respect to the last
GammaLib release.

GBase
  The print() method now takes an optional argument of type GChatter
  that controls the chattiness of the object printing. The default
  chattiness is set to NORMAL.

GEbounds
  The number argument in the setlin() and setlon() methods has been moved
  from the last position to the first position in the argument list.
  The emin(), emax(), emean() and elogmean() methods now take a const
  integer reference as argument instead of an integer value.

GMatrixBase
GMatrix
GMatrixSparse (formerly GSparseMatrix)
GMatrixSymmetric (formerly GSymMatrix)
  Renamed cols() method to columns(), renamed insert_row() and
  extract_row() to row(), renamed insert_col() and extract_col()
  to column(), renamed add_col() to add_to_column(), reorder
  arguments of GMatrixSparse::column() and GMatrixSparse::add_to_column()
  methods.
  The transpose(), inverse() and abs() inplace transformation methods have
  been replaced by methods that return a matrix. The transpose(),
  inverse(), abs(), and negate() friend functions have been removed.

GModelPar
  The "real_" prefix has been stripped from the methods operating on
  true attributes, and the methods operating on unscaled attributes
  have been prefixed with "factor_". Some missing methods have been
  added. The name() and unit() methods now returns a const reference.

GModelSky
  The value() and gradient() methods now take an object of type GPhoton
  as argument.

GModelSpatial
GModelSpatialPointSource
GModelSpatialRadial
GModelSpatialRadialDisk
GModelSpatialRadialGauss
GModelSpatialRadialShell
GModelSpatialDiffuse
GModelSpatialDiffuseConst
GModelSpatialDiffuseCube
GModelSpatialDiffuseMap
GModelSpatialElliptical
GModelSpatialEllipticalDisk
  The eval() and eval_gradients() methods now take an object of type
  GPhoton as argument. The eval_gradients() method is no longer declared
  as const. The mc() method now also takes a GEnergy and a GTime
  object as arguments.

GModelSpectral
GModelSpectralConst
GModelSpectralExpPlaw
GModelSpectralFunc
GModelSpectralPlaw
GModelSpectralPlaw2
GModelSpectralNodes
GModelSpectralLogParabola
  The eval() and eval_gradients() methods now take a GEnergy and a GTime
  object as arguments. The eval_gradients() method is no longer declared
  as const. The mc() method now also takes also a GTime object as argument.

GModelTemporal
GModelTemporalConst
  The eval_gradients() method is no longer declared as const.

GModels
  The set() method has been added for model setting.

GObservations
  The observation is now passed as const reference in the append()
  method (was non-const before). The observation iterator has been
  removed from the class. The reference returned by the models() method
  is now declared const. The operator[] now return a pointer instead
  of a reference and the set() method has been added for observation
  setting.

GOptimizerFunction
  The value method now returns a value instead of a pointer.

GOptimizer & GOptimizerLM
  The optimization operators have been removed and replaced by the
  optimize method.

All GammaLib constants, defined in GTools.hpp, and functions are now
put in the gammalib namespace to avoid name clashes. Mathematical
constants and functions have been moved to a new model named GMath.


3. Configuration
-----------------
None


4. Application module
---------------------
None


5. Base module
--------------
The GContainer interface class has been added to provide a common base
class for all container classes. The following classes are now derived
from GContainer:
- GEbounds
- GGti
- GOptimizerPars (and hence GModels)
- GPhotons
- GTimes
- GXml
- GXmlNode

Appropriate methods have been implemented in these classes to handle
containers. They are not detailed here.


6. FITS I/O Interface
---------------------
None


7. Linear algebra module
------------------------
The matrix classes have be renamed as follows:
GMatrixBase
 |
 +-- GMatrix - generic matrix handling
 +-- GMatrixSparse - sparse matrix handling
 +-- GMatrixSymmetric - symmetric matrix handling

The access operator does not provide argument checking anymore, at()
methods have been added for matrix element access including argument
checking.

A value assignment operator has been added to assign a specific value
to all matrix arguments.


8. Model module
---------------
The sky models have been reorganized.

GSkyModel is now the general class for a sky model. It is no longer
abstract. The classes GModelPointSource, GModelExtendedSource and
GModelDiffuseSource have been removed, as the source type is fully
determined from the spatial model component.

All spatial model components have now been categorized into 3 classes:

* GModelSpatialPointSource - point source
* GModelSpatialRadial - extended radial models
* GModelSpatialElliptical - extended elliptical models
* GModelSpatialDiffuse - diffuse models

While GModelSpatialPointSource is a normal class, the other 2 classes
are abstract and serve as the base classes for the various model
implementations. The following implementations exist:

GModelSpatialRadial
 |
 +- GModelSpatialRadialDisk - axisymmetric disk
 +- GModelSpatialRadialGauss - axisymmetric Gaussian
 +- GModelSpatialRadialShell - axisymmetric shell

GModelSpatialElliptical
 |
 +- GModelSpatialEllipticalDisk - elliptical disk

GModelSpatialDiffuse
 |
 +- GModelSpatialDiffuseConst - isotropic map
 +- GModelSpatialDiffuseCube - map cube
 +- GModelSpatialDiffuseMap - spatial map

The GModelSpatialDiffuseCube class now reads an optional ENERGIES
extension so that the energy values for maps in the cube are
available.


9. Numerics module
------------------
The GNumerics file was renamed to GMath, and mathematical functions
from GTools and GWcslib have been moved into this file.


10. Observation module
----------------------
Add energy constructor to GEnergy that allows one-line construction of
an object by specifying an energy value and unit. Possible unit strings
are erg(s), keV, MeV, GeV, and TeV (case insensitive).


11. Optimization module
-----------------------
None


12. Sky module
--------------
Add a sin() and cos() pre computation cache to speed up repeated
distance computations using dist() or dist_deg(). Coordinate access
methods are now declared inline to provide also faster data access.


13. Support module
------------------
The abstract GUrl base class has been implemented that provides an
interface for transparent handling of Unified Resource Locators.
Using this interface, files can be equally handles as strings, or
http addresses.

The following URL types have been implemented so far:
* GUrlFile: handles flat files.


14. XML module
--------------
The XML module classes now make use of the GUrl abstract interface
to allow for generic URL input / output of the XML document. Before,
only flat file I/O has been supported. Now, I/O can go through any
media for which a URL class has been implemented.


15. VO module
-------------
This new module has been added to support compliance with the Virtual
Observatory (VO) protocols.

The GVOClient class implements a VO compliant client that can communicate
with a SAMP Hub. The method supports SAMP discovery and registering and
unregistering.


16. Test module
---------------
None


17. Multi-wavelength interface
------------------------------
None


18. Fermi-LAT interface
----------------------
None


19. CTA interface
-----------------
The computations for diffuse map templates have been optimized by
introducing a pre computation cache for IRF and Npred values. This
considerably reduces the computing time for diffuse spatial maps.


20. COMPTEL interface
---------------------
None

